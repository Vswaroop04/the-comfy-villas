// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Listing {
  id                String      @id @default(cuid())
  name              String
  rank              Int         @default(autoincrement())
  images            Image[]
  beds              Int?
  bathrooms         Int?
  price             Float?
  amenities         String[]
  location          String?
  views             Int?  @default(0)
  ratings           Ratings[] 
  reviews           Reviews[]
  appointments      Appointments[]
  resident          Resident[]   
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}
model Resident {
  id       String    @id @default(cuid())
  name     String?
  email    String?   @unique
  password String?
  phone    String?      @unique
  ratings  Ratings[]
  reviews Reviews[]
  listingId        String
  listing          Listing  @relation(fields: [listingId], references: [id], onDelete: Cascade)

}


model Ratings {
  id               String   @id @default(cuid())
  userId           String
  user             Resident     @relation(fields: [userId], references: [id], onDelete: Cascade)
  listingId        String
  listing          Listing  @relation(fields: [listingId], references: [id], onDelete: Cascade)
  amenitiesRatings Float
  managementRatings Float
  serviceRatings   Float
  totalRating      Float
}

model Reviews {
  id               String   @id @default(cuid())
  userId           String
  user             Resident     @relation(fields: [userId], references: [id], onDelete: Cascade)
  listingId        String
  listing          Listing  @relation(fields: [listingId], references: [id] , onDelete: Cascade)
  review  String

}


model Appointments {
  id       String    @id @default(cuid())
  name     String?
  email    String?   
  phone    String?     
  listingId        String
  listing          Listing  @relation(fields: [listingId], references: [id],  onDelete: Cascade)

    @@unique([email, phone, listingId])

}

model  Image {
  id String     @id @default(cuid())
  fullImageUrl      String?
  thumbnailImageUrl String?
  listingId        String
  listing          Listing  @relation(fields: [listingId], references: [id],  onDelete: Cascade)
}